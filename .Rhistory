print(accuracy(etsa$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#a=0.9,b=0.1,g=0,05
{
etsb <-ets(reduceddata[, 2],alpha = 0.9,model = "ZZZ",beta = 0.2, gamma=0.09)
summary(etsb)
b=accuracy(etsb$fitted,reduceddata[,2])
coef = etsb$fitted[1] / etsb$residuals[1]/10
x=etsb$states
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsb$fitted,
res = (etsb$residuals)
)
print(accuracy(etsb$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#a=0.9,b=0.3,g=0,09
{
etsc <-ets(reduceddata[, 2],alpha = 0.9,model = "ZZZ",beta = 0.15,gamma=0.01)
summary(etsc)
coef = etsc$fitted[1] / etsc$residuals[1]/10
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsc$fitted,
res = (etsc$residuals)
)
print(accuracy(etsc$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#a=0.9,b=0.2,g=0.09
{
ggAcf(etsauto$residuals)
}#акф для модели
{
forecast<-forecast(etsauto$fitted, h=(length(data[,1])-length))
printData=data.frame(date=c(1:25),
lower=forecast$lower[,2],
upper=forecast$upper[,2],
real=data$United.States.USD.[487:511],
mean=forecast$mean)
print(printData)
ggplot(printData, aes(x=date))+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = lower))+
geom_line(col = "darkgreen", aes(y = upper))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
accuracy(forecast, printData$real)
}#предсказание
{
arima<-arima(reduceddata$value, order=c(1,0,0))
arimaForecast<-forecast(arima, h=25)
arimaData=data.frame(date=c(1:25),
real=data$United.States.USD.[487:511],
upper=arimaForecast$upper[,2],
lower=arimaForecast$lower[,2],
mean=arimaForecast$mean)
print(arimaData)
ggplot(arimaData, aes(x=date))+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = upper))+
geom_line(col = "darkgreen", aes(y = lower))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
accuracy(arimaForecast, arimaData$real)
}#arima
}#моделирование
library(forecast)
library(ggplot2)
{
length <- length(data[, 1]) - 25
reduceddata = data.frame(date = array(1:length), value = data[1:length, 2])
}#подготовка
View(reduceddata)
ggplot(reduceddata, aes(x = date, y = value, group = 1)) + geom_line()
data = read.csv(file = "data.csv")[, c(0:2)] #вытаскиваем нужные данные
library(forecast)
ggPacf(graphdata$value)
library(forecast)
library(ggplot2)
{
length <- length(data[, 1]) - 25
reduceddata = data.frame(date = array(1:length), value = data[1:length, 2])
ggplot(reduceddata, aes(x = date, y = value, group = 1)) + geom_line()
}#подготовка
{
etsauto <- ets(reduceddata[, 2])
summary(etsauto)
coef = etsauto$fitted[1] / etsauto$residuals[1]/10
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsauto$fitted,
res = (etsauto$residuals)
)
print(accuracy(etsauto$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#автоподбор коэффициентов
View(etsauto)
{
etsauto <- ets(reduceddata[, 2])
summary(etsauto)
coef = etsauto$fitted[1] / etsauto$residuals[1]/10
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsauto$fitted,
res = (etsauto$residuals)
)
print(accuracy(etsauto$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#автоподбор коэффициентов
{
etsa <-ets(reduceddata[, 2],alpha = 0.9,model = "ZZZ",beta = 0.1,gamma = 0.05)
summary(etsa)
coef = etsa$fitted[1] / etsa$residuals[1]/10
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsa$fitted,
res = (etsa$residuals)
)
print(accuracy(etsa$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#a=0.95,b=0.1,g=0,05
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~./coef))
{
etsb <-ets(reduceddata[, 2],alpha = 0.9,model = "ZZZ",beta = 0.2, gamma=0.09)
summary(etsb)
b=accuracy(etsb$fitted,reduceddata[,2])
coef = etsb$fitted[1] / etsb$residuals[1]/10
x=etsb$states
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsb$fitted,
res = (etsb$residuals)
)
print(accuracy(etsb$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#a=0.93,b=0.3,g=0,05
{
ggplot(graphdata, aes(x = date, y = value, group = 1)) + geom_line() +
geom_smooth(method = lm, formula = y ~ poly(x, 2))
ggAcf(etsa$residuals)
}#графики для модели
ggplot(etsa, aes(x = date, y = value, group = 1)) + geom_line() +
geom_smooth(method = lm, formula = y ~ poly(x, 2))
ggplot(etsa, aes(x = c(1:486), y = value, group = 1)) + geom_line() +
geom_smooth(method = lm, formula = y ~ poly(x, 2))
ggplot(etsa, aes(x = c(1:486), y = fitted, group = 1)) + geom_line() +
geom_smooth(method = lm, formula = y ~ poly(x, 2))
estdrawData=data.frame(x=c(1:486), y=etsa$fitted)
ggplot(estdrawData, aes(x = x, y = y, group = 1)) + geom_line() +
geom_smooth(method = lm, formula = y ~ poly(x, 2))
ggAcf(etsa$residuals)
estdrawData=data.frame(x=c(1:486), y=etsa$residuals)
ggplot(estdrawData, aes(x = x, y = y, group = 1)) + geom_line() +
geom_smooth(method = lm, formula = y ~ poly(x, 2))
ggplot(estdrawData, aes(x = x, y = y, group = 1)) + geom_line()
forecast<-forecast(etsauto$fitted, h=(length(data[,1])-length))
printData=data.frame(date=c(1:25),
lower=forecast$lower[,2],
upper=forecast$upper[,2],
real=data$United.States.USD.[487:511],
mean=forecast$mean)
print(printData)
View(printData)
ggplot(printData, aes(x=date))+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = lower))+
geom_line(col = "darkgreen", aes(y = upper))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
accuracy(forecast, printData$real)
ggplot(arimaData, aes(x=date) ylab="cost")+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = upper))+
geom_line(col = "darkgreen", aes(y = lower))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
ggplot(arimaData, aes(x=date), ylab="cost")+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = upper))+
geom_line(col = "darkgreen", aes(y = lower))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
ggplot(printData, aes(x=date), ylab="cost")+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = lower))+
geom_line(col = "darkgreen", aes(y = upper))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
ggplot(printData, aes(x=date))+
ylab("cost")
ggplot(printData, aes(x=date))+
ylab("cost")+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = lower))+
geom_line(col = "darkgreen", aes(y = upper))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
{
arima<-arima(reduceddata$value, order=c(1,0,0))
arimaForecast<-forecast(arima, h=25)
arimaData=data.frame(date=c(1:25),
real=data$United.States.USD.[487:511],
upper=arimaForecast$upper[,2],
lower=arimaForecast$lower[,2],
mean=arimaForecast$mean)
print(arimaData)
ggplot(arimaData, aes(x=date), ylab="cost")+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = upper))+
geom_line(col = "darkgreen", aes(y = lower))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
accuracy(arimaForecast, arimaData$real)
}#arima
ggplot(arimaData, aes(x=date), ylab="cost")+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = upper))+
geom_line(col = "darkgreen", aes(y = lower))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
ggplot(arimaData, aes(x=date))+
ylab("cost")+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = upper))+
geom_line(col = "darkgreen", aes(y = lower))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
ggAcf(arima$residuals)
accuracy(arimaForecast, arimaData$real)
accuracy(arimaData$mean, arimaData$real)
data = read.csv(file = "data.csv")[, c(0:2)] #вытаскиваем нужные данные
library(forecast)
library(ggplot2)
{
length <- length(data[, 1]) - 25
reduceddata = data.frame(date = array(1:length), value = data[1:length, 2])
ggplot(reduceddata, aes(x = date, y = value, group = 1)) + geom_line()
}#подготовка
{
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.1,gamma = 0.05)
summary(etsa)
coef = etsa$fitted[1] / etsa$residuals[1]/10
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsa$fitted,
res = (etsa$residuals)
)
print(accuracy(etsa$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#a=0.95,b=0.1,g=0,05
{
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.3,gamma = 0.05)
summary(etsa)
coef = etsa$fitted[1] / etsa$residuals[1]/10
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsa$fitted,
res = (etsa$residuals)
)
print(accuracy(etsa$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#a=0.95,b=0.1,g=0,05
{
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.2,gamma = 0.05)
summary(etsa)
coef = etsa$fitted[1] / etsa$residuals[1]/10
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsa$fitted,
res = (etsa$residuals)
)
print(accuracy(etsa$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#a=0.95,b=0.1,g=0,05
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.5,gamma = 0.05)
summary(etsa)
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.1,gamma = 0.05)
summary(etsa)
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.01,gamma = 0.05)
summary(etsa)
{
etsauto <- ets(reduceddata[, 2])
summary(etsauto)
coef = etsauto$fitted[1] / etsauto$residuals[1]/10
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsauto$fitted,
res = (etsauto$residuals)
)
print(accuracy(etsauto$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~./coef))
}#автоподбор коэффициентов
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.02,gamma = 0.05)
summary(etsa)
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.03,gamma = 0.05)
summary(etsa)
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.04,gamma = 0.05)
summary(etsa)
{
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.04,gamma = 0.05)
summary(etsa)
coef = etsa$fitted[1] / etsa$residuals[1]/10
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsa$fitted,
res = (etsa$residuals)
)
print(accuracy(etsa$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#a=0.95,b=0.1,g=0,05
{
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.03,gamma = 0.05)
summary(etsa)
coef = etsa$fitted[1] / etsa$residuals[1]/10
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsa$fitted,
res = (etsa$residuals)
)
print(accuracy(etsa$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
}#a=0.95,b=0.1,g=0,05
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.1,gamma = 0.05)
summary(etsa)
etsa <-ets(reduceddata[, 2],alpha = 0.9,model = "ZZZ",beta = 0.1,gamma = 0.05)
summary(etsa)
etsa <-ets(reduceddata[, 2],alpha = 0.9,model = "ZZZ",beta = 0.9,gamma = 0.05)
summary(etsa)
summary(etsauto)
etsa <-ets(reduceddata[, 2],alpha = 0.9,model = "MAdN",beta = 0.9,gamma = 0.05)
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "MAdN",beta = 0.02,phi=0.98)
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "MAdN",beta = 0.02,phi=0.975)
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "MAdN",beta = 0.02,phi=0.97)
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.02,phi=0.97)
summary(etsa)
etsa <-ets(reduceddata[, 2],alpha = 0.95,model = "ZZZ",beta = 0.02,phi=0.98)
summary(etsa)
coef = etsa$fitted[1] / etsa$residuals[1]/10
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsa$fitted,
res = (etsa$residuals)
)
print(accuracy(etsa$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
etsb <-ets(reduceddata[, 2],alpha = 0.93,model = "ZZZ",beta = 0.2, phi=0.96)
summary(etsb)
b=accuracy(etsb$fitted,reduceddata[,2])
coef = etsb$fitted[1] / etsb$residuals[1]/10
x=etsb$states
drawdata <-
data.frame(
date = reduceddata$date,
base = reduceddata$value,
fit = etsb$fitted,
res = (etsb$residuals)
)
print(accuracy(etsb$fitted,reduceddata$value))
ggplot(drawdata, aes(x = date)) +
geom_line(col = "red", aes(y = base)) +
geom_line(col = "blue", aes(y = fit)) +
geom_line(col = "darkgreen", aes(y = res*coef))+
scale_y_continuous(sec.axis = sec_axis(~.*coef))
{
estdrawData=data.frame(x=c(1:486), y=etsauto$residuals)
ggplot(estdrawData, aes(x = x, y = y, group = 1)) + geom_line()
ggAcf(etsauto$residuals)
}#графики для модели
ggplot(estdrawData, aes(x = x, y = y, group = 1)) + geom_line()
forecast<-forecast(etsauto$fitted, h=(length(data[,1])-length))
printData=data.frame(date=c(1:25),
lower=forecast$lower[,2],
upper=forecast$upper[,2],
real=data$United.States.USD.[487:511],
mean=forecast$mean)
print(printData)
ggplot(printData, aes(x=date))+
ylab("cost")+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = lower))+
geom_line(col = "darkgreen", aes(y = upper))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
accuracy(forecast, printData$real)
arima<-arima(reduceddata$value)
summary(arima)
arima<-arima(reduceddata$value, order=c(1,0,0))
summary(arima)
arima<-auto.arima(reduceddata$value)
summary(arima)
arimaForecast<-forecast(arima, h=25)
arimaData=data.frame(date=c(1:25),
real=data$United.States.USD.[487:511],
upper=arimaForecast$upper[,2],
lower=arimaForecast$lower[,2],
mean=arimaForecast$mean)
print(arimaData)
ggplot(arimaData, aes(x=date))+
ylab("cost")+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = upper))+
geom_line(col = "darkgreen", aes(y = lower))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
ggAcf(arima$residuals)
accuracy(arimaData$mean, arimaData$real)
arimaForecast<-forecast(arima, h=25)
arimaData=data.frame(date=c(1:25),
real=data$United.States.USD.[487:511],
upper=arimaForecast$upper[,2],
lower=arimaForecast$lower[,2],
mean=arimaForecast$mean)
print(arimaData)
ggplot(arimaData, aes(x=date))+
ylab("cost")+
geom_line(col = "red", aes(y = real)) +
geom_line(col = "blue", aes(y = mean)) +
geom_line(col = "darkgreen", aes(y = upper))+
geom_line(col = "darkgreen", aes(y = lower))+
geom_smooth(method = lm, formula = y ~ log(x, base = 10), aes(y=real), col="darkred")
ggAcf(arima$residuals)
accuracy(arimaData$mean, arimaData$real)
accuracy(arimaData$mean, arimaData$real)
print(arimaData)
accuracy(arimaData$mean, arimaData$real)
accuracy(arimaForecast, arimaData$real)
